- include: sliding_deploy_pull.yml
  vars:
    # Passing through: name, user, git_url, version
    shared_dirs: []
    copied_dirs: [ "bower_components", "node_modules" ]

- stat: path="{{app_dir}}/deployments/{{name}}/setup/gruntfile.coffee"
  register: gruntfilePath

- stat: path="{{app_dir}}/deployments/{{name}}/setup/gulpfile.coffee"
  register: gulpfilePath

- name: sliding_deploy_angular {{name}} - copy settings.coffee to scripts folder
  copy: src="files/{{settings_file}}"
        dest="{{app_dir}}/deployments/{{name}}/setup/{{settings_dest|default('app/scripts/settings.coffee')}}"

- name: sliding_deploy_angular {{name}} - remove old npm dependencies
  command: npm prune --unsafe-perm
           chdir="{{app_dir}}/deployments/{{name}}/setup"

- name: sliding_deploy_angular {{name}} - install npm dependencies
  command: npm install --unsafe-perm
           chdir="{{app_dir}}/deployments/{{name}}/setup"
  ignore_errors: yes

- name: sliding_deploy_angular {{name}} - install npm dependencies 2nd attempt
  command: npm install --unsafe-perm
           chdir="{{app_dir}}/deployments/{{name}}/setup"

- name: sliding_deploy_angular {{name}} - install bower dependencies
  command: bower install --dev --allow-root
           chdir="{{app_dir}}/deployments/{{name}}/setup"

- name: sliding_deploy_angular {{name}} - build dist with grunt
  command: grunt build
           chdir="{{app_dir}}/deployments/{{name}}/setup"
  when: gruntfilePath.stat.exists == true

- name: sliding_deploy_angular {{name}} - build dist with gulp
  command: ./node_modules/gulp/bin/gulp.js build
           chdir="{{app_dir}}/deployments/{{name}}/setup"
  when: gulpfilePath.stat.exists == true

# TODO: Run some kind of setup script provided by the app, if it's present

- include: sliding_deploy_apply.yml
