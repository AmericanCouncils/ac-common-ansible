- name: sliding_deploy_pull {{name}} - create deployments directory
  file: path="{{app_dir}}/deployments/{{name}}"
        state=directory
        owner="{{user}}"
        group="{{user}}"

- name: sliding_deploy_pull {{name}} - create shared_dirs directory
  file: path="{{app_dir}}/deployments/{{name}}/shared_dirs"
        state=directory
        owner="{{user}}"
        group="{{user}}"

- name: sliding_deploy_pull {{name}} - delete old temporary repo directory
  file: path="{{app_dir}}/deployments/{{name}}/temp"
        state=absent

- name: create /root/.ssh directory
  file: path=/root/.ssh/ state=directory owner=root group=root

- name: sliding_deploy_pull {{name}} - clone repository
  git: repo="{{git_url}}"
       dest="{{app_dir}}/deployments/{{name}}/temp"
       version="{{version}}"
       depth=1
       accept_hostkey=true
  register: git_clone

- name: sliding_deploy_pull {{name}} - setup deployment name
  set_fact:
    deploy_dir: "{{app_dir}}/deployments/{{name}}/d-{{ansible_date_time.iso8601 | replace(':','.')}}-{{version}}-{{git_clone.after}}"

- name: sliding_deploy_pull {{name}} - rename repository to correct deployment name
  command: mv "{{app_dir}}/deployments/{{name}}/temp" "{{deploy_dir}}"
           removes="{{app_dir}}/deployments/{{name}}/temp"

- name: sliding_deploy_pull {{name}} - set ownership of the repository
  file: path="{{deploy_dir}}"
        state=directory
        recurse=yes
        owner="{{user}}"
        group="{{user}}"

- name: sliding_deploy_pull {{name}} - create temporary symlink to latest version
  file: src="{{deploy_dir}}"
        dest="{{app_dir}}/deployments/{{name}}/setup"
        state=link

# NOTE: This uses the 'removes' tag to avoid running the command unless the item
# exists; it does not actually remove anything.
- name: sliding_deploy_pull {{name}} - copy previously generated data
  command: rsync -a {{name}}/{{item}} {{deploy_dir}}
           chdir="{{app_dir}}" removes="{{app_dir}}/{{name}}/{{item}}"
  with_items: copied_dirs

- name: sliding_deploy_pull {{name}} - create shared directories
  file: path="{{app_dir}}/deployments/{{name}}/shared_dirs/{{item}}"
        state=directory
        owner="{{user}}"
        group="{{user}}"
  with_items: shared_dirs

- name: sliding_deploy_pull {{name}} - symlink shared directories
  file: src="{{app_dir}}/deployments/{{name}}/shared_dirs/{{item}}"
        dest="{{deploy_dir}}/{{item}}"
        state=link
  with_items: shared_dirs
