- include_tasks: install_apache2.yml
- include_tasks: install_mysql.yml
- include_tasks: install_php8.yml

# - name: LAMP Stack Setup with Docker and Composer
#   hosts: your_target_hosts # Replace with your actual target hosts
#   #become: yes  # To gain root privileges
#   tasks:
#     - name: Print loading message
#       ansible.builtin.debug:
#         msg: "LOADING LAMP"

#     - name: Update and upgrade apt packages
#       ansible.builtin.apt:
#         update_cache: yes
#         upgrade: yes

#     - name: Install Apache and MySQL
#       ansible.builtin.apt:
#         name: 
#           - apache2
#           - mysql-server
#         state: present

#     - name: Install PHP and its extensions
#       ansible.builtin.apt:
#         name:
#           - php
#           - php-mysql
#           - php-curl
#           - php-mbstring
#           - php-xml
#           - php-xmlrpc
#           - php-intl
#           - php-zip
#           - libapache2-mod-php
#         state: present

#     - name: Connect to Docker repository
#       ansible.builtin.block:
#         - name: Create directory for Docker keyring
#           ansible.builtin.file:
#             path: /etc/apt/keyrings
#             state: directory

#         - name: Add Docker GPG key
#           ansible.builtin.apt_key:
#             url: https://download.docker.com/linux/ubuntu/gpg
#             keyring: /etc/apt/keyrings/docker.gpg

#         - name: Add Docker repository
#           ansible.builtin.apt_repository:
#             repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
#             state: present

#     # Uncomment the following if you need to start mysql and perform the commented operations in the script
#     # - name: Start MySQL service and wait
#     #   ansible.builtin.service:
#     #     name: mysql
#     #     state: started
#     #   register: mysql_service
#     #   async: 30
#     #   poll: 0

#     # - name: Wait for MySQL to start
#     #   ansible.builtin.async_status:
#     #     jid: "{{ mysql_service.ansible_job_id }}"
#     #   register: job_result
#     #   until: job_result.finished
#     #   retries: 10
#     #   delay: 5

#     - name: Copy Apache configuration
#       ansible.builtin.copy:
#         src: ./config/apache.conf
#         dest: /etc/apache2/apache2.conf

#     - name: Install Composer
#       ansible.builtin.shell: |
#         php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
#         php -r "if (hash_file('sha384', 'composer-setup.php') === 'e21205b207c3ff031906575712edab6f13eb0b361f2085f1f1237b7126d785e826a450292b6cfd1d64d92e6563bbde02') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
#         php composer-setup.php
#         php -r "unlink('composer-setup.php');"
#         mv composer.phar /usr/local/bin/composer
#       args:
#         executable: /bin/bash
#       #become: yes

#     - name: Run Composer install
#       ansible.builtin.shell: composer install --working-dir=/var/www/html/exams
#       args:
#         executable: /bin/bash
#       #become: yes


